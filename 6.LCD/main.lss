
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000174  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00000174  000001e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000020  00000000  00000000  000001f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 0000002c  00000000  00000000  00000210  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000004e9  00000000  00000000  0000023c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000166  00000000  00000000  00000725  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000002c6  00000000  00000000  0000088b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000040  00000000  00000000  00000b54  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000ab  00000000  00000000  00000b94  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000012e  00000000  00000000  00000c3f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000048  00000000  00000000  00000d6d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e7       	ldi	r30, 0x74	; 116
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 5b 00 	call	0xb6	; 0xb6 <main>
  7a:	0c 94 b8 00 	jmp	0x170	; 0x170 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <cmd>:
#include<avr/io.h>
#include<util/delay.h>

void cmd(unsigned char a)
{
PORTB=a;
  82:	88 bb       	out	0x18, r24	; 24
PORTA=0x04;
  84:	84 e0       	ldi	r24, 0x04	; 4
  86:	8b bb       	out	0x1b, r24	; 27
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  88:	80 ed       	ldi	r24, 0xD0	; 208
  8a:	97 e0       	ldi	r25, 0x07	; 7
  8c:	fc 01       	movw	r30, r24
  8e:	31 97       	sbiw	r30, 0x01	; 1
  90:	f1 f7       	brne	.-4      	; 0x8e <cmd+0xc>
_delay_ms(1);
PORTA=0x00;
  92:	1b ba       	out	0x1b, r1	; 27
  94:	01 97       	sbiw	r24, 0x01	; 1
  96:	f1 f7       	brne	.-4      	; 0x94 <cmd+0x12>
_delay_ms(1);
}
  98:	08 95       	ret

0000009a <data>:

void data(unsigned char a)
{
PORTB=a;
  9a:	88 bb       	out	0x18, r24	; 24
PORTA=0x05;
  9c:	85 e0       	ldi	r24, 0x05	; 5
  9e:	8b bb       	out	0x1b, r24	; 27
  a0:	20 ed       	ldi	r18, 0xD0	; 208
  a2:	37 e0       	ldi	r19, 0x07	; 7
  a4:	c9 01       	movw	r24, r18
  a6:	01 97       	sbiw	r24, 0x01	; 1
  a8:	f1 f7       	brne	.-4      	; 0xa6 <data+0xc>
_delay_ms(1);
PORTA=0x01;
  aa:	81 e0       	ldi	r24, 0x01	; 1
  ac:	8b bb       	out	0x1b, r24	; 27
  ae:	c9 01       	movw	r24, r18
  b0:	01 97       	sbiw	r24, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <data+0x16>
_delay_ms(1);
}
  b4:	08 95       	ret

000000b6 <main>:

void main()
{
  b6:	df 93       	push	r29
  b8:	cf 93       	push	r28
  ba:	cd b7       	in	r28, 0x3d	; 61
  bc:	de b7       	in	r29, 0x3e	; 62
  be:	28 97       	sbiw	r28, 0x08	; 8
  c0:	0f b6       	in	r0, 0x3f	; 63
  c2:	f8 94       	cli
  c4:	de bf       	out	0x3e, r29	; 62
  c6:	0f be       	out	0x3f, r0	; 63
  c8:	cd bf       	out	0x3d, r28	; 61
DDRA=0xff;
  ca:	8f ef       	ldi	r24, 0xFF	; 255
  cc:	8a bb       	out	0x1a, r24	; 26
DDRB=0xff;
  ce:	87 bb       	out	0x17, r24	; 23
#include<avr/io.h>
#include<util/delay.h>

void cmd(unsigned char a)
{
PORTB=a;
  d0:	88 e3       	ldi	r24, 0x38	; 56
  d2:	88 bb       	out	0x18, r24	; 24
PORTA=0x04;
  d4:	94 e0       	ldi	r25, 0x04	; 4
  d6:	9b bb       	out	0x1b, r25	; 27
  d8:	20 ed       	ldi	r18, 0xD0	; 208
  da:	37 e0       	ldi	r19, 0x07	; 7
  dc:	f9 01       	movw	r30, r18
  de:	31 97       	sbiw	r30, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <main+0x28>
_delay_ms(1);
PORTA=0x00;
  e2:	1b ba       	out	0x1b, r1	; 27
  e4:	f9 01       	movw	r30, r18
  e6:	31 97       	sbiw	r30, 0x01	; 1
  e8:	f1 f7       	brne	.-4      	; 0xe6 <main+0x30>
#include<avr/io.h>
#include<util/delay.h>

void cmd(unsigned char a)
{
PORTB=a;
  ea:	81 e0       	ldi	r24, 0x01	; 1
  ec:	88 bb       	out	0x18, r24	; 24
PORTA=0x04;
  ee:	9b bb       	out	0x1b, r25	; 27
  f0:	f9 01       	movw	r30, r18
  f2:	31 97       	sbiw	r30, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <main+0x3c>
_delay_ms(1);
PORTA=0x00;
  f6:	1b ba       	out	0x1b, r1	; 27
  f8:	f9 01       	movw	r30, r18
  fa:	31 97       	sbiw	r30, 0x01	; 1
  fc:	f1 f7       	brne	.-4      	; 0xfa <main+0x44>
#include<avr/io.h>
#include<util/delay.h>

void cmd(unsigned char a)
{
PORTB=a;
  fe:	8c e0       	ldi	r24, 0x0C	; 12
 100:	88 bb       	out	0x18, r24	; 24
PORTA=0x04;
 102:	9b bb       	out	0x1b, r25	; 27
 104:	f9 01       	movw	r30, r18
 106:	31 97       	sbiw	r30, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <main+0x50>
_delay_ms(1);
PORTA=0x00;
 10a:	1b ba       	out	0x1b, r1	; 27
 10c:	f9 01       	movw	r30, r18
 10e:	31 97       	sbiw	r30, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <main+0x58>
#include<avr/io.h>
#include<util/delay.h>

void cmd(unsigned char a)
{
PORTB=a;
 112:	80 e8       	ldi	r24, 0x80	; 128
 114:	88 bb       	out	0x18, r24	; 24
PORTA=0x04;
 116:	9b bb       	out	0x1b, r25	; 27
 118:	c9 01       	movw	r24, r18
 11a:	01 97       	sbiw	r24, 0x01	; 1
 11c:	f1 f7       	brne	.-4      	; 0x11a <main+0x64>
_delay_ms(1);
PORTA=0x00;
 11e:	1b ba       	out	0x1b, r1	; 27
 120:	c9 01       	movw	r24, r18
 122:	01 97       	sbiw	r24, 0x01	; 1
 124:	f1 f7       	brne	.-4      	; 0x122 <main+0x6c>

cmd(0x38);
cmd(0x01);
cmd(0x0c);
cmd(0x80);
char s[]="WELCOME";
 126:	de 01       	movw	r26, r28
 128:	11 96       	adiw	r26, 0x01	; 1
 12a:	e0 e6       	ldi	r30, 0x60	; 96
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	88 e0       	ldi	r24, 0x08	; 8
 130:	01 90       	ld	r0, Z+
 132:	0d 92       	st	X+, r0
 134:	81 50       	subi	r24, 0x01	; 1
 136:	e1 f7       	brne	.-8      	; 0x130 <main+0x7a>
 138:	fe 01       	movw	r30, r28
 13a:	31 96       	adiw	r30, 0x01	; 1
}

void data(unsigned char a)
{
PORTB=a;
PORTA=0x05;
 13c:	55 e0       	ldi	r21, 0x05	; 5
 13e:	20 ed       	ldi	r18, 0xD0	; 208
 140:	37 e0       	ldi	r19, 0x07	; 7
_delay_ms(1);
PORTA=0x01;
 142:	41 e0       	ldi	r20, 0x01	; 1
 144:	09 c0       	rjmp	.+18     	; 0x158 <main+0xa2>
_delay_ms(1);
}

void data(unsigned char a)
{
PORTB=a;
 146:	88 bb       	out	0x18, r24	; 24
PORTA=0x05;
 148:	5b bb       	out	0x1b, r21	; 27
 14a:	c9 01       	movw	r24, r18
 14c:	01 97       	sbiw	r24, 0x01	; 1
 14e:	f1 f7       	brne	.-4      	; 0x14c <main+0x96>
_delay_ms(1);
PORTA=0x01;
 150:	4b bb       	out	0x1b, r20	; 27
 152:	c9 01       	movw	r24, r18
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <main+0x9e>
cmd(0x01);
cmd(0x0c);
cmd(0x80);
char s[]="WELCOME";
int i=0;
while(s[i]!='\0')
 158:	81 91       	ld	r24, Z+
 15a:	88 23       	and	r24, r24
 15c:	a1 f7       	brne	.-24     	; 0x146 <main+0x90>
{
data(s[i]);
i++;
}
}
 15e:	28 96       	adiw	r28, 0x08	; 8
 160:	0f b6       	in	r0, 0x3f	; 63
 162:	f8 94       	cli
 164:	de bf       	out	0x3e, r29	; 62
 166:	0f be       	out	0x3f, r0	; 63
 168:	cd bf       	out	0x3d, r28	; 61
 16a:	cf 91       	pop	r28
 16c:	df 91       	pop	r29
 16e:	08 95       	ret

00000170 <_exit>:
 170:	f8 94       	cli

00000172 <__stop_program>:
 172:	ff cf       	rjmp	.-2      	; 0x172 <__stop_program>
