   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  78               	.global	adc_init
  80               	adc_init:
  82               	.Ltext1:
   1:adc.h         **** 
   2:adc.h         **** 
   3:adc.h         **** #ifndef _ADC_H_
   4:adc.h         **** #define _ADC_H_						//This is the header for AVR Microcontroller.
   5:adc.h         **** #include<avr/io.h>
   6:adc.h         **** #include<util/delay.h>		//header file for genarating time delay
   7:adc.h         **** 		//headerfile for interfacing LCD
   8:adc.h         **** #include<avr/interrupt.h>			//header file for using interrupt service routins
   9:adc.h         **** 
  10:adc.h         **** 
  11:adc.h         ****  void adc_init()
  12:adc.h         ****  {
  83               	 0 */
  85               	.LM1:
  86               		ldi r24,lo8(-26)
  87               		out 38-32,r24
  13:adc.h         ****   ADCSRA=0XE6;						//ADC enable, ADC interrupt enable, set prescaller to 64
  88               	ilogue start */
  90 0000 86EE      	.LM2:
  91 0002 86B9      		ret
  14:adc.h         ****   		
  15:adc.h         ****  }
  93               	pe1:
  96               	.global	getdata
  98               	getdata:
 100               	.LM3:
 101               	.LFBB2:
 102               	/* prologue: function */
  16:adc.h         ****  unsigned int getdata(unsigned char chno)	
  17:adc.h         ****   {
 103               	ize = 0 */
 105               	.LM4:
 106               		ldi r25,lo8(64)
 107               		out 39-32,r25
  18:adc.h         **** 	unsigned int adcdata,adcdata1;
  19:adc.h         ****     ADMUX=0X40;						//right align the ADC result
 108               	bn	68,0,20,.LM5-.LFBB2
 109               	.LM5:
 110 0006 90E4      		in r25,39-32
 111 0008 97B9      		or r25,r24
  20:adc.h         ****     ADMUX|=chno;					//select the ADC channel
 112               	 39-32,r25
 113               	.LBB44:
 114 000a 97B1      	.LBB45:
 115 000c 982B      	.LBB46:
 116 000e 97B9      	.LBB47:
 118               	.Ltext2:
 120               	.LM6:
 121               		ldi r24,lo8(3000)
 122               		ldi r25,hi8(3000)
   1:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****    All rights reserved.
   4:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
   5:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
   8:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  11:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****      distribution.
  15:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  16:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  20:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  32:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h,v 1.1 2007/05/13 21:23:20 joerg_wunsch Exp $ */
  33:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  34:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  37:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  39:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** /** \file */
  40:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  41:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     \code
  42:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  43:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     \endcode
  44:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  45:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  46:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  47:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  48:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  49:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  50:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  51:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  52:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  53:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  54:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  55:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  56:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  57:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  58:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     to the overall delay time.
  59:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  60:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  61:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  62:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** */
  63:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  64:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  65:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  66:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  67:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** #endif
  68:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  69:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  71:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     register.
  76:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  77:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     can be achieved.
  79:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** */
  80:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** void
  81:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** {
  83:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 		"brne 1b"
  86:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 	);
  89:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** }
  90:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  91:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  93:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     counter register pair.
  98:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 
  99:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h ****  */
 102:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** void
 103:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** {
 105:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 123               	 ;  105 "c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h" 1
 124               		1: sbiw r24,1
 125 0010 88EB      		brne 1b
 126 0012 9BE0      	 ;  0 "" 2
 127               	/* #NOAPP */
 128               	.LBE47:
 129 0014 0197      	.LBE46:
 130 0016 01F4      	.LBE45:
 131               	.LBE44:
 133               	.Ltext3:
 135               	.LM7:
 136               		in r25,36-32
 138               	.LM8:
  21:adc.h         ****     //ADCSRA|=0X40;					//start ADC convertion
  22:adc.h         ****     _delay_ms(1);
  23:adc.h         **** adcdata1=ADCL;					//give some time delay to complit the aDC convertion
 139               	ov r19,r24
 140               		ldi r18,lo8(0)
 141 0018 94B1      		add r18,r25
  24:adc.h         **** 	adcdata=ADCH;
 142               	c r19,__zero_reg__
 144 001a 85B1      	.LM9:
 145 001c 382F      		movw r24,r18
 146 001e 20E0      	/* epilogue start */
 147 0020 290F      		ret
  25:adc.h         **** 	
  26:adc.h         **** 	adcdata1+=(adcdata<<8);
  27:adc.h         **** 	return (adcdata1);
  28:adc.h         **** 	
  29:adc.h         **** 	
  30:adc.h         ****   }
 149               	2:
 151 0024 C901      	.global	dispdata
 153 0026 0895      	dispdata:
 155               	.Ltext4:
 157               	.LM10:
 158               	.LFBB3:
 159               	/* prologue: function */
 160               	/* frame size = 0 */
 161               	.L6:
   1:uart.h        **** 
   2:uart.h        **** 
   3:uart.h        **** 
   4:uart.h        **** #ifndef _UART_H_
   5:uart.h        **** #define _UART_H_
   6:uart.h        **** 
   7:uart.h        **** void uartinit()
   8:uart.h        **** {
   9:uart.h        **** 	UCSRA=0x00;
  10:uart.h        **** 	UCSRB=0x18;
  11:uart.h        **** 	UCSRC=0x86;
  12:uart.h        **** 	UBRRH=0x00;
  13:uart.h        **** 	UBRRL=51;
  14:uart.h        **** 	delayuart(1000);
  15:uart.h        **** }
  16:uart.h        **** 
  17:uart.h        **** void printchar(unsigned char uchar)
  18:uart.h        **** {
  19:uart.h        ****   UDR=uchar;
  20:uart.h        ****   while((UCSRA&0x40)==0x00);
  21:uart.h        ****   delayuart(1000);
  22:uart.h        **** }
  23:uart.h        ****  
  24:uart.h        **** void printstring(const unsigned char *ustring)
  25:uart.h        **** {
  26:uart.h        ****    while ( *ustring )
  27:uart.h        ****     {
  28:uart.h        **** 	 printchar( *ustring++);
  29:uart.h        **** 	
  30:uart.h        **** }	}
  31:uart.h        **** 
  32:uart.h        ****  
  33:uart.h        **** void printnum(unsigned int num)
  34:uart.h        **** {
  35:uart.h        ****     unsigned char paa=0, H=0,T=0,O=0;
  36:uart.h        **** 	paa=num/1000;
  37:uart.h        **** 	
  38:uart.h        **** 	H=(num-(paa*1000))/100;
  39:uart.h        **** 	T=(num -(paa*1000) -(H*100))/10;
  40:uart.h        **** 	O=(num - (paa*1000) -(H*100) - (T*10));
  41:uart.h        **** 	
  42:uart.h        **** 	if(paa!=0)
  43:uart.h        **** 	{printchar(paa+48);}
  44:uart.h        **** 	printchar(H+48);
  45:uart.h        **** 	
  46:uart.h        **** 	printchar(T+48);
  47:uart.h        **** 	
  48:uart.h        **** 	printchar(O+48);
  49:uart.h        **** 	
  50:uart.h        **** }
  51:uart.h        ****  
  52:uart.h        ****  
  53:uart.h        **** unsigned char dispdata()
  54:uart.h        **** {
 162               	55,.LM11-.LFBB3
 163               	.LM11:
 164               		sbis 43-32,7
 165               		rjmp .L6
 167               	.LM12:
  55:uart.h        ****   while((UCSRA&0x80)==0x00);
 168               	4,44-32
 169               	/* epilogue start */
 171 002a 00C0      	.LM13:
  56:uart.h        ****   return UDR;
 172               	
 174 002c 8CB1      	.Lscope3:
  57:uart.h        **** }
 176               	tabs	"delaytime:P(0,4)",64,0,0,24
 177               	.global	delayuart
 179               	delayuart:
 181               	.LM14:
 182               	.LFBB4:
 183               	/* prologue: function */
 184               	/* frame size = 0 */
  58:uart.h        ****  
  59:uart.h        **** void delayuart(unsigned int delaytime)
  60:uart.h        **** {
 186               	i r18,lo8(0)
 187               		ldi r19,hi8(0)
 188               	.L10:
 190               	.LM16:
 191               	/* #APP */
 192               	 ;  65 "uart.h" 1
 193 0030 20E0      		nop
 194 0032 30E0      	 ;  0 "" 2
 195               	 ;  65 "uart.h" 1
  61:uart.h        **** unsigned int dc;
  62:uart.h        **** 	 for(dc=0;dc<=delaytime;dc++)
  63:uart.h        **** 	 {
  64:uart.h        **** 		 
  65:uart.h        **** 		  asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
 196               	 "" 2
 197               	 ;  65 "uart.h" 1
 198               		nop
 199               	 ;  0 "" 2
 200 0034 0000      	 ;  65 "uart.h" 1
 201               		nop
 202               	 ;  0 "" 2
 203 0036 0000      	 ;  65 "uart.h" 1
 204               		nop
 205               	 ;  0 "" 2
 206 0038 0000      	 ;  65 "uart.h" 1
 207               		nop
 208               	 ;  0 "" 2
 210               	.LM17:
 211               	 ;  66 "uart.h" 1
 212 003c 0000      		nop
 213               	 ;  0 "" 2
 214               	 ;  66 "uart.h" 1
 215 003e 0000      		nop
 216               	 ;  0 "" 2
  66:uart.h        **** 		  asm("nop");asm("nop");asm("nop");asm("nop");
 217               	p
 218               	 ;  0 "" 2
 219               	 ;  66 "uart.h" 1
 220 0040 0000      		nop
 221               	 ;  0 "" 2
 223 0042 0000      	.LM18:
 224               	/* #NOAPP */
 225               		subi r18,lo8(-(1))
 226 0044 0000      		sbci r19,hi8(-(1))
 227               		cp r24,r18
 228               		cpc r25,r19
 229 0046 0000      		brsh .L10
 230               	/* epilogue start */
 232               	.LM19:
 233               		ret
 238 0050 00F4      	.Lscope4:
  67:uart.h        **** 	 }
  68:uart.h        **** }
 240               	,64,0,0,24
 241               	.global	printchar
 243               	printchar:
 245               	.LM20:
 246               	.LFBB5:
 247               	/* prologue: function */
 248               	/* frame size = 0 */
 250               	.LM21:
 251               		out 44-32,r24
 252               	.L14:
 254               	.LM22:
 255               		sbis 43-32,6
 256               		rjmp .L14
 258               	.LM23:
 259               		ldi r24,lo8(1000)
 260 0054 8CB9      		ldi r25,hi8(1000)
 261               		call delayuart
 262               	/* epilogue start */
 264 0056 5E9B      	.LM24:
 265 0058 00C0      		ret
 267               	.Lscope5:
 270 005e 0E94 0000 	.global	printnum
 272               	printnum:
 274 0062 0895      	.LM25:
 275               	.LFBB6:
 276               		push r12
 277               		push r13
 278               		push r14
 279               		push r15
 280               		push r16
 281               		push r17
 282               		push r28
 283               		push r29
 284               	/* prologue: function */
 285 0064 CF92      	/* frame size = 0 */
 286 0066 DF92      		movw r28,r24
 288 006a FF92      	.LM26:
 289 006c 0F93      		ldi r22,lo8(1000)
 290 006e 1F93      		ldi r23,hi8(1000)
 291 0070 CF93      		call __udivmodhi4
 292 0072 DF93      		mov r20,r22
 294               	.LM27:
 295 0074 EC01      		mov r18,r22
 296               		ldi r19,lo8(0)
 297               		ldi r24,lo8(-1000)
 298 0076 68EE      		ldi r25,hi8(-1000)
 299 0078 73E0      		mul r18,r24
 300 007a 0E94 0000 		movw r14,r0
 301 007e 462F      		mul r18,r25
 302               		add r15,r0
 303               		mul r19,r24
 304 0080 262F      		add r15,r0
 305 0082 30E0      		clr r1
 306 0084 88E1      		movw r30,r14
 307 0086 9CEF      		add r30,r28
 308 0088 289F      		adc r31,r29
 309 008a 7001      		movw r24,r30
 310 008c 299F      		ldi r22,lo8(100)
 311 008e F00C      		ldi r23,hi8(100)
 312 0090 389F      		call __udivmodhi4
 313 0092 F00C      		mov r13,r22
 315 0096 F701      	.LM28:
 316 0098 EC0F      		mov r18,r22
 317 009a FD1F      		ldi r19,lo8(0)
 318 009c CF01      		ldi r24,lo8(-100)
 319 009e 64E6      		ldi r25,hi8(-100)
 320 00a0 70E0      		mul r18,r24
 321 00a2 0E94 0000 		movw r16,r0
 322 00a6 D62E      		mul r18,r25
 323               		add r17,r0
 324               		mul r19,r24
 325 00a8 262F      		add r17,r0
 326 00aa 30E0      		clr r1
 327 00ac 8CE9      		movw r24,r30
 328 00ae 9FEF      		add r24,r16
 329 00b0 289F      		adc r25,r17
 330 00b2 8001      		ldi r22,lo8(10)
 331 00b4 299F      		ldi r23,hi8(10)
 332 00b6 100D      		call __udivmodhi4
 333 00b8 389F      		mov r12,r22
 335 00bc 1124      	.LM29:
 336 00be CF01      		tst r20
 337 00c0 800F      		breq .L18
 339 00c4 6AE0      	.LM30:
 340 00c6 70E0      		mov r24,r20
 341 00c8 0E94 0000 		subi r24,lo8(-(48))
 342 00cc C62E      		call printchar
 343               	.L18:
 345 00ce 4423      	.LM31:
 346 00d0 01F0      		mov r24,r13
 347               		subi r24,lo8(-(48))
 348               		call printchar
 350 00d4 805D      	.LM32:
 351 00d6 0E94 0000 		mov r24,r12
 352               		subi r24,lo8(-(48))
 353               		call printchar
 355 00da 8D2D      	.LM33:
 356 00dc 805D      		movw r24,r28
 357 00de 0E94 0000 		subi r24,lo8(-(48))
 358               		mov r18,r24
 359               		add r18,r14
 360 00e2 8C2D      		add r18,r16
 361 00e4 805D      		ldi r24,lo8(-10)
 362 00e6 0E94 0000 		ldi r25,hi8(-10)
 363               		mul r12,r24
 364               		mov r24,r0
 365 00ea CE01      		clr r1
 366 00ec 805D      		add r24,r18
 367 00ee 282F      		call printchar
 368 00f0 2E0D      	/* epilogue start */
 370 00f4 86EF      	.LM34:
 371 00f6 9FEF      		pop r29
 372 00f8 C89E      		pop r28
 373 00fa 802D      		pop r17
 374 00fc 1124      		pop r16
 375 00fe 820F      		pop r15
 376 0100 0E94 0000 		pop r14
 377               		pop r13
 378               		pop r12
 379               		ret
 385 010e EF90      	.Lscope6:
 388 0114 0895      	.global	printstring
 390               	printstring:
 392               	.LM35:
 393               	.LFBB7:
 394               		push r28
 395               		push r29
 396               	/* prologue: function */
 397               	/* frame size = 0 */
 398               		movw r28,r24
 399               		rjmp .L21
 400               	.L22:
 402               	.LM36:
 403 0116 CF93      		adiw r28,1
 404 0118 DF93      		call printchar
 405               	.L21:
 407 011a EC01      	.LM37:
 408 011c 00C0      		ld r24,Y
 409               		tst r24
 410               		brne .L22
 411               	/* epilogue start */
 413 0120 0E94 0000 	.LM38:
 414               		pop r29
 415               		pop r28
 416               		ret
 418 0126 8823      	.Lscope7:
 420               	.global	uartinit
 422               	uartinit:
 424 012c CF91      	.LM39:
 425 012e 0895      	.LFBB8:
 426               	/* prologue: function */
 427               	/* frame size = 0 */
 429               	.LM40:
 430               		out 43-32,__zero_reg__
 432               	.LM41:
 433               		ldi r24,lo8(24)
 434               		out 42-32,r24
 436               	.LM42:
 437               		ldi r24,lo8(-122)
 438               		out 64-32,r24
 440               	.LM43:
 441               		out 64-32,__zero_reg__
 443 0134 8AB9      	.LM44:
 444               		ldi r24,lo8(51)
 445               		out 41-32,r24
 447 0138 80BD      	.LM45:
 448               		ldi r24,lo8(1000)
 449               		ldi r25,hi8(1000)
 450 013a 10BC      		call delayuart
 451               	/* epilogue start */
 453 013c 83E3      	.LM46:
 454 013e 89B9      		ret
 456               	.Lscope8:
 458 0142 93E0      	.global	main
 460               	main:
 462               	.Ltext5:
 464               	.LM47:
 465               	.LFBB9:
 466               		push r16
 467               		push r17
 468               		push r28
 469               		push r29
 470               	/* prologue: function */
 471               	/* frame size = 0 */
   1:main.c        **** #include<avr/io.h>
   2:main.c        **** #include<util/delay.h>
   3:main.c        **** #include<avr/interrupt.h>
   4:main.c        **** #include<stdlib.h>
   5:main.c        **** #include "adc.h"
   6:main.c        **** #include "uart.h"
   7:main.c        **** 
   8:main.c        **** int pulse=0, i=0;
   9:main.c        **** 
  10:main.c        **** void main()
  11:main.c        **** {
 472               	,0,.Ltext7
 473               	.Ltext7:
 475 014a 0F93      	.LM50:
 476 014c 1F93      		call uartinit
 477 014e CF93      		ldi r24,lo8(500)
 478 0150 DF93      		ldi r25,hi8(500)
 479               	.LBB50:
 480               	.LBB51:
  12:main.c        **** DDRD=0b11111011;
 481               	LBB53:
 483 0152 8BEF      	.Ltext8:
 485               	.LM51:
 486               		ldi r18,lo8(300)
 487               		ldi r19,hi8(300)
 488               	.L27:
 489               		movw r30,r18
 490               	/* #APP */
 491 0156 86EE      	 ;  105 "c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h" 1
 492 0158 86B9      		1: sbiw r30,1
 493               		brne 1b
 494               	 ;  0 "" 2
 495               	/* #NOAPP */
 496               	.LBE53:
  13:main.c        **** adc_init();
  14:main.c        **** uartinit();
 497               	"c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h",132,0,0,.Ltext9
 498               	.Ltext9:
 500 015e 84EF      	.LM52:
 501 0160 91E0      		sbiw r24,1
 503               	.LM53:
 504               		brne .L27
 505               	.LBE51:
 506               	.LBE50:
 508               	.Ltext10:
 510 0162 2CE2      	.LM54:
 511 0164 31E0      		ldi r24,lo8(64)
 512               		out 91-32,r24
 514               	.LM55:
 515               		ldi r24,lo8(1)
 516 0168 3197      		out 85-32,r24
 518               	.LM56:
 519               		out 79-32,__zero_reg__
 521               	.LM57:
 522               	/* #APP */
 523               	 ;  25 "main.c" 1
   1:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    All rights reserved.
   5:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
   6:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
   9:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  12:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****      distribution.
  16:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  17:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  21:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  33:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** /* $Id: delay.h,v 1.5.2.1 2009/02/25 10:14:03 joerg_wunsch Exp $ */
  34:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  35:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  38:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** #include <inttypes.h>
  39:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  40:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  41:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** /** \file */
  42:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  43:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     \code
  44:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  45:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  46:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     #include <util/delay.h>
  47:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     \endcode
  48:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  49:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  50:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  51:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  52:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     used.
  53:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  54:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  55:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  56:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  57:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  58:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  59:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  60:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  61:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  62:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  63:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  64:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  65:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  66:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  67:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  68:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  69:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  70:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     routines linked into the application.
  71:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  72:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  73:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  74:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  75:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  76:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** */
  77:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  78:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  79:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  80:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  81:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** #endif
  82:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  83:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** #ifndef F_CPU
  84:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  85:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  86:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  87:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** #endif
  88:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  89:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  90:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  91:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** #endif
  92:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  93:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** /**
  94:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    \ingroup util_delay
  95:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  96:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
  97:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
  98:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
  99:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 100:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
 101:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 102:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 
 103:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 104:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 105:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 106:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 107:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 108:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h ****  */
 109:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** void
 110:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** _delay_ms(double __ms)
 111:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** {
 112:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 	uint16_t __ticks;
 113:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 4e3) * __ms;
 114:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 115:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 		__ticks = 1;
 116:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 	else if (__tmp > 65535)
 117:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 	{
 118:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 119:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 120:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 		while(__ticks)
 121:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 		{
 122:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 			// wait 1/10 ms
 123:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 124:c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h **** 			__ticks --;
 524               	0,29,.LM58-.LFBB9
 525               	.LM58:
 526 016c 0197      	/* #NOAPP */
 527               		ldi r16,lo8(1)
 528               	.LBB54:
 529 016e 01F4      	.LBB55:
 530               	.LBB56:
 531               	.LBB57:
 533               	.Ltext11:
  15:main.c        **** 
  16:main.c        **** _delay_ms(50);
  17:main.c        **** 
  18:main.c        **** GICR=0x40;
 534               	
 536 0170 80E4      	.LM58:
 537 0172 8BBF      	/* #NOAPP */
  19:main.c        **** MCUCR=0x01;
 538               	
 539               		out 85-32,r24
 541 0176 85BF      	.LM56:
  20:main.c        **** 
  21:main.c        **** TCCR1A=0;
 542               	
 544 0178 1FBC      	.Ltext10:
  22:main.c        **** 
  23:main.c        **** int dist=0;
  24:main.c        **** 
  25:main.c        **** sei();
 545               	stabn	68,0,18,.LM54-.LFBB9
 546               	.LM54:
 547               		ldi r24,lo8(64)
 548               		out 91-32,r24
 550               	.LM55:
  26:main.c        **** 
  27:main.c        **** while(1)
  28:main.c        **** {
  29:main.c        **** PORTD=0x01; 	//connect to trig pin
 551               	w r24,1
 553               	.LM53:
 554 017c 01E0      		brne .L27
 555               	.LBE51:
 556               	.LBE50:
 558               	.Ltext10:
 560               	.LM54:
 561               		ldi r24,lo8(64)
 562               		out 91-32,r24
 564               	.LM55:
 565               		ldi r24,lo8(1)
 566               		out 85-32,r24
 568               	.LM56:
 569               		out 79-32,__zero_reg__
 571               	.LM57:
 572               	/* #APP */
 573               	 ;  25 "main.c" 1
 574 0180 CCE2      		sei
 575 0182 D1E0      	 ;  0 "" 2
 577               	.LM58:
 578               	/* #NOAPP */
 579               		ldi r16,lo8(1)
 580               	.LBB54:
 581               	.LBB55:
 582               	.LBB56:
 583               	.LBB57:
 585 0184 02BB      	.Ltext11:
 587               	.LM59:
 588               		ldi r17,lo8(60)
 589               	.LBE57:
 590               	.LBE56:
 591               	.LBE55:
 592               	.LBE54:
 593               	.LBB61:
 594 0186 812F      	.LBB62:
 595               	.LBB63:
 596               	.LBB64:
 598 018a 01F4      	.LM60:
 599               		ldi r28,lo8(300)
 600               		ldi r29,hi8(300)
 601               	.L29:
 602               	.LBE64:
 603               	.LBE63:
 604               	.LBE62:
 605               	.LBE61:
  30:main.c        **** _delay_us(15);
  31:main.c        **** PORTD=0x00;
 607               	,r16
 608               	.LBB68:
 609 018c 12BA      	.LBB60:
  32:main.c        **** 
  33:main.c        **** dist=pulse/58;	//correction factor
  34:main.c        **** 
  35:main.c        **** printnum(dist);	// to display in tera term
 610               	300)
 611               		ldi r29,hi8(300)
 612 018e 8091 0000 	.L29:
 613 0192 9091 0000 	.LBE64:
 614 0196 6AE3      	.LBE63:
 615 0198 70E0      	.LBE62:
 616 019a 0E94 0000 	.LBE61:
 618 01a0 0E94 0000 	.Ltext12:
 620 01a6 93E0      	.LM61:
 621               		out 50-32,r16
 622               	.LBB68:
 623               	.LBB60:
 624               	.LBB59:
 625               	.LBB58:
 627               	.Ltext13:
 629               	.LM62:
 630 01a8 FE01      		mov r24,r17
 631               	/* #APP */
 632               	 ;  83 "c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h" 1
 633 01aa 3197      		1: dec r24
 634 01ac 01F4      		brne 1b
 635               	 ;  0 "" 2
 636               	/* #NOAPP */
 637               	.LBE58:
 638               	.LBE59:
 639               	.LBE60:
 640               	.LBE68:
 642               	.Ltext14:
 644               	.LM63:
 645               		out 50-32,__zero_reg__
 647 01b2 00C0      	.LM64:
 648               		lds r24,pulse
 649               		lds r25,(pulse)+1
 650               		ldi r22,lo8(58)
 651               		ldi r23,hi8(58)
 652               		call __divmodhi4
 653               		movw r24,r22
 654               		call printnum
 655               		ldi r24,lo8(1000)
 656               		ldi r25,hi8(1000)
 657               	.L28:
 658               	.LBB69:
 659               	.LBB67:
 660               	.LBB66:
 661               	.LBB65:
 663               	.Ltext15:
 665               	.LM65:
 666               		movw r30,r28
 667               	/* #APP */
 668               	 ;  105 "c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h" 1
 669               		1: sbiw r30,1
 670               		brne 1b
 671               	 ;  0 "" 2
 672               	/* #NOAPP */
 673               	.LBE65:
 674               	.LBE66:
  36:main.c        **** _delay_ms(100);	
  37:main.c        **** }
  38:main.c        **** }
  39:main.c        **** 
  40:main.c        **** ISR(INT0_vect)
  41:main.c        **** {
 676               	 "" 2
 677               	/* #NOAPP */
 678               	.LBE65:
 679 01b4 1F92      	.LBE66:
 681 01b8 0FB6      	.Ltext16:
 683 01bc 1124      	.LM66:
 684 01be 8F93      		sbiw r24,1
 686               	.LM67:
 687               		brne .L28
  42:main.c        ****   if(i==1)
 688               	ext16
 689               	.Ltext16:
 691 01c6 9091 0000 	.LM66:
 692 01ca 0197      		sbiw r24,1
  43:main.c        ****   {
  44:main.c        ****   TCCR1B=0;
 694               	delay.h",132,0,0,.Ltext16
 695               	.Ltext16:
  45:main.c        ****   pulse=TCNT1;
 697               		"c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h",132,0,0,.Ltext16
 698               	.Ltext16:
 700 01d2 9DB5      	.LM66:
 701 01d4 9093 0000 		sbiw r24,1
  46:main.c        ****   TCNT1=0;
 703               	delay.h",132,0,0,.Ltext16
 704               	.Ltext16:
 706 01de 1CBC      	.LM66:
  47:main.c        ****   i=0;
 707               	avr-20100110/lib/gcc/../../avr/include/util/delay.h",132,0,0,.Ltext16
 708               	.Ltext16:
 710 01e4 1092 0000 	.LM66:
 711               		sbiw r24,1
  48:main.c        ****   }
  49:main.c        ****   
  50:main.c        ****   if(i==0)
 712               	lib/gcc/../../avr/include/util/delay.h",132,0,0,.Ltext16
 713               	.Ltext16:
 715 01ec 9091 0000 	.LM66:
 716 01f0 892B      		sbiw r24,1
  51:main.c        ****   {
  52:main.c        ****   TCCR1B=0x01;
 718               	delay.h",132,0,0,.Ltext16
 719               	.Ltext16:
 721 01f6 8EBD      	.LM66:
  53:main.c        ****   i=1;
 722               	avr-20100110/lib/gcc/../../avr/include/util/delay.h",132,0,0,.Ltext16
 723               	.Ltext16:
 725 01fa 90E0      	.LM66:
 726 01fc 9093 0000 		sbiw r24,1
 728               	.LM67:
 729               		brne .L28
  54:main.c        ****   }
  55:main.c        **** }
 730               	ext16
 731               	.Ltext16:
 733 0206 8F91      	.LM66:
 734 0208 0F90      		sbiw r24,1
 736 020c 0F90      	.LM67:
 737 020e 1F90      		brne .L28
 738 0210 1895      		rjmp .L29
 739               	.LBE67:
 740               	.LBE69:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:2      *ABS*:0000003f __SREG__
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:3      *ABS*:0000003e __SP_H__
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:4      *ABS*:0000003d __SP_L__
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:5      *ABS*:00000034 __CCP__
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:7      *ABS*:00000001 __zero_reg__
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:80     .text:00000000 adc_init
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:102    .text:00000006 getdata
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:159    .text:00000028 dispdata
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:185    .text:00000030 delayuart
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:252    .text:00000054 printchar
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:281    .text:00000064 printnum
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:399    .text:00000116 printstring
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:431    .text:00000130 uartinit
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:469    .text:0000014a main
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:746    .bss:00000000 pulse
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:673    .text:000001b4 __vector_1
C:\Users\ADMIN\AppData\Local\Temp/ccTsyut7.s:752    .bss:00000002 i

UNDEFINED SYMBOLS
__udivmodhi4
__divmodhi4
__do_clear_bss
